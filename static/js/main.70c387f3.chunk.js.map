{"version":3,"sources":["style/style.module.css","components/Reel.js","containers/ReelList.js","actions/reel.actions.js","containers/Search.js","components/DropInPanel.js","containers/Sort.js","App.js","serviceWorker.js","reducers/reel.reducer.js","reducers/filter.reducer.js","reducers/sort.reducer.js","reducers/search.reducer.js","reducers/index.js","index.js"],"names":["module","exports","Reel","num","per","brand","name","paused","percentSaved","total","url","toggleReelPause","data","usePalette","className","styles","reelContainer","reelBrandName","reelName","substring","reel","reelPercent","reelImageOverlay","onClick","handleReelPause","reelImage","style","border","vibrant","src","alt","progress","height","backgroundColor","opacity","totalPaid","statusIcon","ReelList","props","sortedReels","reels","sortType","sort","a","b","reelList","this","direction","map","index","key","reverse","React","Component","getQueriedReels","query","filter","filterReels","toLowerCase","includes","connect","state","search","type","dispatch","Search","searchBar","searchInput","onChange","e","updateSearchQuery","target","value","searchTitle","DropInPanel","updateSortType","updateSortDirection","updateFilter","useState","open","openDropDown","toggleDropIn","dropInPanel","display","sortTitle","sortRow1","sortButton","color","defaultValue","id","sortRow2","sortIcon","filterTitle","filterRow","filterButton","Sort","App","app","Boolean","window","location","hostname","match","initialState","action","combineReducers","store","createStore","rootReducer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.70c387f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"style_app__3FvE1\",\"searchBar\":\"style_searchBar__1nY_F\",\"searchInput\":\"style_searchInput__304q-\",\"searchTitle\":\"style_searchTitle__2qGBc\",\"reel\":\"style_reel__2uG1G\",\"reelContainer\":\"style_reelContainer__bRat-\",\"reelBrandName\":\"style_reelBrandName__2_ytU\",\"reelName\":\"style_reelName__3lCT5\",\"reelPercent\":\"style_reelPercent__193P7\",\"totalPaid\":\"style_totalPaid__3oD3N\",\"reelImage\":\"style_reelImage__3oYkR\",\"statusIcon\":\"style_statusIcon__3kbt2\",\"reelList\":\"style_reelList__2oRJf\",\"progress\":\"style_progress__CtQIa\",\"dropInPanelContainerclosed\":\"style_dropInPanelContainerclosed__1kxJE\",\"dropInPanelContaineropen\":\"style_dropInPanelContaineropen__DF5Xs\",\"sortTitle\":\"style_sortTitle__1Pbqi\",\"sortRow1\":\"style_sortRow1__1bIy9\",\"sortRow2\":\"style_sortRow2__DRi2w\",\"filterTitle\":\"style_filterTitle__2C8bo\",\"filterRow\":\"style_filterRow__VIkBV\",\"filterButton\":\"style_filterButton__eL_yp\",\"sortIcon\":\"style_sortIcon__3APAx\",\"sortButton\":\"style_sortButton__23hVw\",\"dropInPanel\":\"style_dropInPanel__g5PAf\",\"filterPanelContainer\":\"style_filterPanelContainer__2ZkHd\",\"toggleDropIn\":\"style_toggleDropIn__2VE2p\"};","import React from 'react'\nimport { usePalette } from 'react-palette'\nimport styles from '../style/style.module.css'\n\n\nconst Reel = ({brand, name, paused, percentSaved, total, url, toggleReelPause}) => {\n   \n    const { data } = usePalette(url)\n    \n    function amountPaid(num, per){\n            return (num/100)*per;\n    }\n    function handleReelPause(name) {\n        if(percentSaved !== 100) {\n            toggleReelPause(name)\n        }\n    }\n\n    return(\n        <div className={styles.reelContainer}>\n            <h2 className={styles.reelBrandName}>{brand}</h2>\n            <h3 className={styles.reelName}>{`${name.substring(0,18)}...`}</h3>\n            <div className={styles.reel}>\n                <span className={styles.reelPercent} >{percentSaved}%</span>\n                <div className={styles.reelImageOverlay}></div>\n                <img onClick={() => handleReelPause(name)} className={styles.reelImage} style={{border: `10px solid ${data.vibrant}` }} src={url} alt='Reel item'></img>\n                <div className={styles.progress} style={{height: `${percentSaved}%`, backgroundColor: data.vibrant, opacity: paused ? '0.3' : `1` }}></div>\n            </div>\n            <span className={styles.totalPaid} >{paused ? 'Paused' :`STATUS:$${amountPaid(total,percentSaved)}/$${total}`}</span>\n            <img className={styles.statusIcon} src={paused ? 'icons/Pause-Icon.png': 'icons/Play-Icon.png' } alt='Reel status icon'></img>\n        </div>\n    )\n}\n\nexport default Reel","import React from 'react'\nimport Reel from '../components/Reel'\nimport {connect} from 'react-redux'\nimport { toggleReelPause } from '../actions/reel.actions'\nimport styles from '../style/style.module.css'\n\nclass ReelList extends React.Component {\n\n    render(props) {\n        const sortedReels = (reels,sortType) => {\n            switch(sortType) {\n                case 'ALPHABETICAL':\n                    return reels.sort((a, b) => (a.brand > b.brand) ? 1 : -1)\n                case 'TOTAL':\n                    return reels.sort((a, b) => (a.total > b.total ) ? 1 : -1)\n                case 'PERCENT_SAVED':\n                    return reels.sort((a, b) => (a.percentSaved > b.percentSaved ) ? 1 : -1)\n                    \n                default: return reels\n            }\n        }\n\n        return(\n            <ul className={styles.reelList}>\n                {this.props.direction === 'LOW-HIGH' || this.props.sortType === 'ALPHABETICAL'  ? sortedReels(this.props.reels, this.props.sortType).map((reel, index) => (\n                    <Reel key={index} brand={reel.brand} name={reel.name} paused={reel.paused} \n                        percentSaved={reel.percentSaved} total={reel.total} url={reel.url}\n                        toggleReelPause={this.props.toggleReelPause} \n                    />\n                )) : \n                sortedReels(this.props.reels, this.props.sortType).reverse().map((reel, index) => (\n                    <Reel key={index} brand={reel.brand} name={reel.name} paused={reel.paused} \n                        percentSaved={reel.percentSaved} total={reel.total} url={reel.url}\n                        toggleReelPause={this.props.toggleReelPause} \n                    />\n                ))}\n            </ul>\n        )\n    }\n}\n\nfunction getQueriedReels(reels,query,filter) {\n    return filterReels(reels.filter(reel => reel.name.toLowerCase().includes(query.toLowerCase()) || reel.brand.toLowerCase().includes(query.toLowerCase())),filter)\n}\n\n\nconst filterReels = (reels, filter) => {\n    switch(filter) {\n        case \"ACTIVE\":\n            return reels.filter(reel => reel.paused === false );\n        case \"PAUSED\":\n            return reels.filter(reel => reel.paused === true);\n    default: return reels\n    }\n}\n\nconst mapStateToProps = state => ({\n    reels: getQueriedReels(state.reels,state.search,state.filter),\n    sortType: state.sort.type,\n    direction: state.sort.direction\n})\n\nconst mapDispatchToProps = dispatch => ({\n    toggleReelPause: name => dispatch(toggleReelPause(name))\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ReelList)","export const toggleReelPause = name => ({\n    type: 'TOGGLE_REEL_PAUSE',\n    name\n})\n\nexport const updateSortType = sort => ({\n    type: 'UPDATE_SORT_TYPE',\n    sort\n})\n\nexport const updateSortDirection = direction => ({\n    type: 'UPDATE_SORT_DIRECTION',\n    direction\n})\n\nexport const updateFilter = filter => ({\n    type: 'UPDATE_FILTER',\n    filter\n})\n\nexport const updateSearchQuery = query => ({\n    type: 'UPDATE_SEARCH_QUERY',\n    query\n})","import React from 'react'\nimport { connect } from 'react-redux'\nimport styles from '../style/style.module.css'\nimport { updateSearchQuery } from '../actions/reel.actions'\n\nclass Search extends React.Component {\n\n\n    \n\n\nrender() {\n  \n    return(\n        <form className={styles.searchBar}>\n            <input className={styles.searchInput} type='text' onChange={(e) => this.props.updateSearchQuery(e.target.value)}>\n            </input>\n            <h1 className={styles.searchTitle}>Search</h1>\n        </form>\n    )\n    }   \n}\n\nconst mapStateToProps = dispatch => ({\n}) \n\nconst mapDispatchToProps = dispatch => ({\n    updateSearchQuery: query => dispatch(updateSearchQuery(query))\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Search)","import React, { useState } from 'react'\nimport styles from '../style/style.module.css'\n\n\nconst DropInPanel = ({ sortType, direction, filter, updateSortType, updateSortDirection, updateFilter }) => {\n\n    const [ open, openDropDown] = useState(false)\n    \n\n    return(\n        <div className={styles[`dropInPanelContainer${open ? 'open' : 'closed'}`]} >\n            <input className={styles.toggleDropIn} type='button' onClick={() => openDropDown(!open)}></input>\n            <div className={styles.dropInPanel} style={{display: open ? 'block' : 'block'}}>\n                <h3 className={styles.sortTitle}>SORT</h3>\n                <div className={styles.sortRow1}>\n                        <input className={styles.sortButton} style={{color: sortType !== 'ALPHABETICAL' ? 'darkgrey' : 'black'}} type='button' defaultValue='A-Z' id='ALPHABETICAL' onClick={(e) => updateSortType(e.target.id)}></input>\n                </div>\n                <div className={styles.sortRow2}>\n                    <input className={styles.sortIcon} style={{opacity: direction !== 'HIGH-LOW' || sortType === 'ALPHABETICAL' ? '0.3' : '1'}} type='image' id='HIGH-LOW'  src='icons/High-Low-Icon.png' onClick={(e => updateSortDirection(e.target.id))} alt='High to low button'></input>\n                    <ul>\n                        <input className={styles.sortButton} style={{color: sortType !== 'TOTAL' ? 'darkgrey' : 'black'}}  type='button' defaultValue='$ PRICE' id='TOTAL' onClick={(e) => updateSortType(e.target.id)}></input>\n                            <input className={styles.sortButton} style={{color: sortType !== 'PERCENT_SAVED' ? 'darkgrey' : 'black'}} type='button' defaultValue='% SAVED' id='PERCENT_SAVED' onClick={(e) => updateSortType(e.target.id)}></input>\n                    </ul>\n                    <input className={styles.sortIcon} style={{opacity: direction !== 'LOW-HIGH' || sortType === 'ALPHABETICAL' ? '0.4' : '1'}}  type='image' id='LOW-HIGH' src='icons/Low-High-Icon.png' onClick={(e => updateSortDirection(e.target.id))} alt='Low to high button'></input>\n                </div>\n                <h3 className={styles.filterTitle}>Filter</h3>\n                <ul className={styles.filterRow}>\n                    <input className={styles.filterButton}  type='button' style={{opacity: filter !== 'ACTIVE' ? '0.4' : '1'}}  defaultValue='ACTIVE' onClick={(e) => updateFilter(e.target.value)}></input>\n                    <input className={styles.filterButton} type='button' style={{opacity: filter !== 'ALL' ? '0.4' : '1'}} defaultValue='ALL' onClick={(e) => updateFilter(e.target.value)}></input>\n                    <input className={styles.filterButton} type='button' style={{opacity: filter !== 'PAUSED' ? '0.4' : '1'}}  defaultValue='PAUSED' onClick={(e) => updateFilter(e.target.value)}></input>\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default DropInPanel","import React from 'react'\nimport { connect } from 'react-redux'\nimport DropInPanel from '../components/DropInPanel'\nimport { updateSortType } from '../actions/reel.actions'\nimport { updateSortDirection } from '../actions/reel.actions'\nimport { updateFilter} from '../actions/reel.actions'\n\nclass Sort extends React.Component{\n    render(props){\n        return(\n            <div>\n                <DropInPanel sortType={this.props.sortType} direction={this.props.direction} filter={this.props.filter}\n                updateSortDirection={this.props.updateSortDirection} updateSortType={this.props.updateSortType}\n                updateFilter={this.props.updateFilter} />\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    sortType: state.sort.type,\n    direction: state.sort.direction,\n    filter: state.filter\n})\n\nconst mapDispatchToProps = dispatch => ({\n    updateSortDirection: direction => dispatch(updateSortDirection(direction)),\n    updateSortType: type => dispatch(updateSortType(type)),\n    updateFilter: filter => dispatch(updateFilter(filter))\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Sort)\n","import React from 'react';\nimport ReelList from './containers/ReelList'\nimport Search from './containers/Search'\nimport Sort from './containers/Sort'\nimport styles from './style/style.module.css'\n\nfunction App() {\n  return (\n    <div className={styles.app}>\n        <Search />\n        <ReelList />\n        <Sort />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","let initialState = [\n    {brand: 'ACNE', name: 'Yellow velcro women sneakers', paused: false, percentSaved : 30, total: 1000, url: 'images/Acne-Placeholder.png'},\n    {brand: 'GUCCI', name: 'Mini quilted-leather cross-body bag', paused: false, percentSaved : 50, total: 900, url: 'images/Gucci-Placeholder.jpg'},\n    {brand: 'FENDI ', name: 'X FILA Logo Sneakers', paused: false, percentSaved : 40, total: 250, url: 'images/Fendi-Placeholder.jpg'},\n    {brand: 'BALENCIAGA', name: 'Tortoise shell sunglasses', paused: false, percentSaved : 25, total: 500, url:'images/Glasses-Placeholder.jpg'},\n    {brand: 'SAINT LAURENT ', name: 'Colorful thin sunglasses', paused: false, percentSaved : 100, total: 1000, url: 'images/Saint-Laurent-Placeholder.jpg'},\n    {brand: 'JJP', name: 'Yellow velcro women sneakers', paused: false, percentSaved : 50, total: 1500, url: 'images/Acne-Placeholder.png'},\n    {brand: 'PALACE', name: 'X FILA Logo Sneakers', paused: false, percentSaved : 80, total: 3000, url:'images/Fendi-Placeholder.jpg'},\n    {brand: 'RAYBANS', name: 'Tortoise shell sunglasses', paused: false, percentSaved : 80, total: 3000, url:'images/Glasses-Placeholder.jpg'}\n]\n\nconst reels = (state = initialState, action) => {\n    switch(action.type) {\n        case \"TOGGLE_REEL_PAUSE\":\n            return state.map(reel => {\n                if(reel.name === action.name) {\n                    reel.paused = !reel.paused\n                    return reel\n                }\n                return reel\n            })  \n        default: return state\n    }\n}\n\nexport default reels","const filter = (state = \"ALL\", action) => {\n    switch(action.type) {\n        case \"UPDATE_FILTER\":\n            return action.filter\n\n    default:return state\n    }\n}\n\nexport default filter","\nconst sort = (state = {type: 'ALPHABETICAL', direction: 'LOW-HIGH'}, action) => {\n    switch(action.type) {\n        case 'UPDATE_SORT_TYPE':\n            return {\n                ...state,\n                type: action.sort\n            }\n\n        case 'UPDATE_SORT_DIRECTION':\n            return {\n                ...state,\n                direction: action.direction\n            }\n            default: return state\n    }\n}\n\n\n\nexport default sort","const search = (state = '', action) => {\n    switch(action.type) {\n        case 'UPDATE_SEARCH_QUERY':\n            return action.query\n            \n        default: return state\n    }\n}\n\nexport default search","import { combineReducers } from 'redux';\nimport reels from './reel.reducer'\nimport filter from './filter.reducer';\nimport sort from './sort.reducer'\nimport search from './search.reducer'\n\nexport default combineReducers({\n    reels,\n    filter,\n    sort,\n    search\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport './style/style.module.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}