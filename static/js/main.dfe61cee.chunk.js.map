{"version":3,"sources":["style/style.module.css","components/ReelProgress.js","components/Reel.js","containers/ReelList.js","actions/reel.actions.js","components/Search.js","components/SortFilterPanel.js","App.js","serviceWorker.js","reducers/reel.reducer.js","reducers/filter.reducer.js","reducers/sort.reducer.js","reducers/index.js","index.js"],"names":["module","exports","ReelProgress","percentSaved","color","total","console","log","className","styles","progress","style","height","backgroundColor","Reel","num","per","brand","name","paused","url","toggleReelPause","usePalette","data","loading","error","reelContainer","reelBrandName","reelName","substring","reel","reelPercent","totalPaid","border","lightVibrant","onClick","reelImage","src","ReelList","props","this","reelList","reels","map","index","key","React","Component","connect","state","dispatch","type","Search","searchBar","searchInput","searchTitle","SortFilterPanel","useState","open","openDropDown","bottom","sortFilterPanelContainer","toggleFilterPanel","display","filterPanel","fontWeight","textIndent","margin","sortRow1","sortButton","value","sortRow2","sortIcon","App","app","Boolean","window","location","hostname","match","initialState","action","filter","sortType","sort","combineReducers","store","createStore","rootReducer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dfe61cee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"style_app__3FvE1\",\"searchBar\":\"style_searchBar__1nY_F\",\"searchInput\":\"style_searchInput__304q-\",\"searchTitle\":\"style_searchTitle__2qGBc\",\"sortFilterPanelContainer\":\"style_sortFilterPanelContainer__4PJlP\",\"sortRow1\":\"style_sortRow1__1bIy9\",\"sortRow2\":\"style_sortRow2__DRi2w\",\"sortIcon\":\"style_sortIcon__3APAx\",\"sortButton\":\"style_sortButton__23hVw\",\"filterPanel\":\"style_filterPanel__1s30h\",\"filterPanelContainer\":\"style_filterPanelContainer__2ZkHd\",\"toggleFilterPanel\":\"style_toggleFilterPanel__2lipj\",\"reel\":\"style_reel__2uG1G\",\"reelContainer\":\"style_reelContainer__bRat-\",\"reelName\":\"style_reelName__3lCT5\",\"reelPercent\":\"style_reelPercent__193P7\",\"totalPaid\":\"style_totalPaid__3oD3N\",\"reelImage\":\"style_reelImage__3oYkR\",\"reelList\":\"style_reelList__2oRJf\",\"progress\":\"style_progress__CtQIa\"};","import React from 'react'\nimport styles from '../style/style.module.css'\nconst ReelProgress = ({percentSaved, total, color}) => {\n    console.log(color)\n    return(\n            <div className={styles.progress} style={{height: `${percentSaved}%`, backgroundColor: color}}>\n            </div>\n    )\n}\n\nexport default ReelProgress","import React from 'react'\nimport { usePalette } from 'react-palette'\nimport ReelProgress from './ReelProgress'\nimport styles from '../style/style.module.css'\nimport { get } from 'http';\n\n\n\n\nconst Reel = ({brand, name, paused, percentSaved, total, url, toggleReelPause}) => {\n   \n    const { data, loading, error } = usePalette(url)\n    \n    function amountPaid(num, per){\n            return (num/100)*per;\n    }\n            console.log(paused)\n    return(\n        <div className={styles.reelContainer}>\n            <h2 className={styles.reelBrandName}>{brand}</h2>\n            <h3 className={styles.reelName}>{`${name.substring(0,19)} ...`}</h3>\n            <div className={styles.reel}>\n                <span className={styles.reelPercent}>{percentSaved}%</span>\n                <span className={styles.totalPaid}>{paused ? 'Paused' :`$${amountPaid(total,percentSaved)} out of $${total}`}</span>\n                <img style={{border:`10px solid ${paused ? 'grey' : data.lightVibrant}` }} onClick={() => toggleReelPause(name)} className={styles.reelImage} src={url}></img>\n                <ReelProgress percentSaved={percentSaved} color={paused ? 'grey' : data.lightVibrant } total={total}/>\n            </div>\n        </div>\n    )\n}\n\nexport default Reel","import React from 'react'\nimport Reel from '../components/Reel'\nimport {connect} from 'react-redux'\nimport { toggleReelPause } from '../actions/reel.actions'\n\nimport styles from '../style/style.module.css'\n\n\n class ReelList extends React.Component {\n    render(props) {\n        console.log(this.props)\n        return(\n            <ul className={styles.reelList}>\n                {this.props.reels.map((reel, index) => (\n                    <Reel \n                        key={index} \n                        brand={reel.brand} \n                        name={reel.name} \n                        paused={reel.paused} \n                        percentSaved={reel.percentSaved} \n                        total={reel.total} \n                        url={reel.url}\n                        toggleReelPause={this.props.toggleReelPause}  \n                    />\n                ))}\n            </ul>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    reels: state.reels\n})\n\nconst mapDispatchToProps = dispatch => ({\n    toggleReelPause: name => dispatch(toggleReelPause(name))\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ReelList)","export const toggleReelPause = name => ({\n    type: \"TOGGLE_REEL_PAUSE\",\n    name\n})","import React from 'react'\nimport styles from '../style/style.module.css'\n\nconst Search = () => {\n    return(\n        <div className={styles.searchBar}>\n            <input className={styles.searchInput}>\n            </input>\n            <h1 className={styles.searchTitle}>Search</h1>\n        </div>\n    )\n}\n\nexport default Search","import React, { useState } from 'react'\nimport styles from '../style/style.module.css'\n\nconst SortFilterPanel = () => {\n    const [ open, openDropDown] = useState(false)\n\n    return(\n        <div style={{bottom: open ? '0px' : '-220px'}} className={styles.sortFilterPanelContainer}>\n            <input type='button' className={styles.toggleFilterPanel} onClick={() => openDropDown(!open)}></input>\n            <div style={{display: open ? 'block' : 'block'}} className={styles.filterPanel}>\n                <h3 style={{fontWeight: 'normal', textIndent: '11px', margin: '0'}}>Sort</h3>\n                <div className={styles.sortRow1}>\n                    <input className={styles.sortButton} type='button' value='A-Z'></input>\n                </div>\n                <div className={styles.sortRow2}>\n                    <input className={styles.sortIcon} type='image' src='/icons/High-Low-Icon.png'></input>\n                    <ul>\n                        <input className={styles.sortButton} type='button' value='TOTAL'></input>\n                        <input className={styles.sortButton} type='button' value='PERCENT'></input>\n                    </ul>\n                    <input className={styles.sortIcon} type='image' src='/icons/Low-High-Icon.png'></input>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SortFilterPanel","import React from 'react';\nimport ReelList from './containers/ReelList'\nimport Search from './components/Search'\nimport SortFilterPanel from './components/SortFilterPanel'\nimport styles from './style/style.module.css'\n\nfunction App() {\n  return (\n    <div className={styles.app}>\n      <header>\n        <Search />\n      </header>\n      <main>\n        <ReelList />\n      </main>\n      <SortFilterPanel />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","let initialState = [\n    {brand: 'ACNE', name: 'Bryz Velcro-strap suede trainers', paused: false, percentSaved : '30', total: '3000', url: './images/Acne-placeholder.jpg'},\n    {brand: 'GUCCI', name: 'GG Marmont mini quilted-leather cross-body bag', paused: false, percentSaved : '50', total: '3000', url: './images/Acne-placeholder.jpg'},\n    {brand: 'LOEWE ', name: 'Animal alphabet-print silk scarf', paused: false, percentSaved : '40', total: '3000', url: './images/Acne-placeholder.jpg'},\n    {brand: 'FENDI', name: 'Mon Tresor perforated-logo leather bucket bag', paused: false, percentSaved : '25', total: '3000', url: './images/Acne-placeholder.jpg'},\n    {brand: 'ALBUS LUMEN ', name: 'Safi striped single-breasted blazer', paused: false, percentSaved : '100', total: '3000', url: './images/Acne-placeholder.jpg'},\n    {brand: 'VETEMENTS ', name: 'Embroidered-logo denim cap', paused: false, percentSaved : '50', total: '3000', url: './images/Acne-placeholder.jpg'},\n    {brand: 'ROKSANDA ', name: 'Aulna floral-print silk-satin blouse', paused: false, percentSaved : '80', total: '3000', url:'./images/Acne-placeholder.jpg'}\n]\n\n\nconst reels = (state = initialState, action) => {\n    switch(action.type) {\n        case \"TOGGLE_REEL_PAUSE\":\n            return state.map(reel => {\n                if(reel.name === action.name) {\n                    reel.paused = !reel.paused\n                    return reel\n                }\n                return reel\n            })  \n        default: return state\n    }\n}\n\nexport default reels","const filter = (state = \"ALL\", action) => {\n    switch(action.type) {\n        case \"UPDATE_FILTER\":\n            return action.filter\n\n    default:return state\n    }\n}\n\nexport default filter","\nconst initialState = {\n    sortType: 'A-Z',\n}\n\n\n\n\nconst sort = (state = initialState, action) => {\n    return state\n}\n\n\n\nexport default sort","import { combineReducers } from 'redux';\nimport reels from './reel.reducer'\nimport filter from './filter.reducer';\nimport sort from './sort.reducer'\n\n\nexport default combineReducers({\n    reels,\n    filter,\n    sort\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport './style/style.module.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}